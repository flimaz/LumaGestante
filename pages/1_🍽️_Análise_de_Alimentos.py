import streamlit as st
from PIL import Image
import os
import google.generativeai as genai
from dotenv import load_dotenv

st.set_page_config(page_title="Dra. Luma - An√°lise de Alimentos", layout="centered")

st.title("üçΩÔ∏è An√°lise de Alimentos na Gravidez")

# Carregar API
load_dotenv()
API_KEY = os.getenv("GOOGLE_API_KEY")
genai.configure(api_key=API_KEY)
model = genai.GenerativeModel("models/gemini-2.0-flash")

# Inicializa hist√≥rico pr√≥prio da p√°gina de alimentos
if "historico_alimentos" not in st.session_state:
    st.session_state.historico_alimentos = []


# üî• Fun√ß√µes para cards visuais
def card_sucesso(mensagem):
    st.markdown(f"""
    <div style="padding:15px; border-radius:10px; background-color:#d4edda; color:#155724; border:1px solid #c3e6cb">
        ‚úÖ {mensagem}
    </div>
    """, unsafe_allow_html=True)


def card_falha(mensagem):
    st.markdown(f"""
    <div style="padding:15px; border-radius:10px; background-color:#f8d7da; color:#721c24; border:1px solid #f5c6cb">
        ‚ùå {mensagem}
    </div>
    """, unsafe_allow_html=True)


# üîç Fun√ß√£o para extrair nome do alimento
def extrair_nome_do_resultado(resposta):
    linhas = resposta.splitlines()
    for linha in linhas:
        if linha.lower().startswith("nome:"):
            titulo = linha.split(":", 1)[1].strip()
            if titulo and titulo.lower() != "n√£o identificado":
                return titulo
    return "Alimento via imagem"


st.markdown("Envie uma foto de um alimento ou digite o nome dele para saber se √© indicado durante a gravidez.")

# Op√ß√£o de an√°lise
opcao = st.radio("Selecione o modo de an√°lise:", ["üì∏ Foto do alimento", "‚úçÔ∏è Digitar nome do alimento"])

# üì∏ An√°lise por imagem
if opcao == "üì∏ Foto do alimento":
    imagem = st.file_uploader("üì∏ Envie a foto do alimento", type=["jpg", "jpeg", "png"])

    if imagem:
        with st.spinner("Analisando com muito carinho..."):
            try:
                image = Image.open(imagem)

                prompt = """
                Voc√™ √© uma nutricionista especializada na sa√∫de de gestantes.

                Observe a imagem atentamente e siga exatamente este formato de resposta:

                Identifique cada alimento ou item vis√≠vel no prato ou embalagem, listando um por um.

                Para cada alimento, responda:
                - Se √© seguro ou n√£o para gestantes (Sim, N√£o ou Depende).
                - Calorias estimadas por 100g ou 100ml (e, se aplic√°vel, informe tamb√©m por unidade m√©dia).
                - Benef√≠cios para a gesta√ß√£o, se houver.

                Em seguida, forne√ßa uma estimativa das calorias totais do prato ou da embalagem como um todo, considerando os alimentos presentes e uma quantidade m√©dia razo√°vel para uma refei√ß√£o.

                Finalize sempre com um alerta acolhedor, refor√ßando que esta √© uma estimativa baseada na imagem e que a gestante deve sempre consultar seu nutricionista ou m√©dico antes de consumir.

                Caso algum alimento n√£o possa ser identificado com seguran√ßa na imagem, informe isso de forma acolhedora, dizendo: "N√£o foi poss√≠vel identificar com precis√£o este item na imagem."

                A resposta deve ser organizada, clara, direta e acolhedora, em tom simp√°tico e profissional.
                """

                response = model.generate_content([prompt, image])
                resultado = response.text.strip()

                titulo = extrair_nome_do_resultado(resultado)

                if resultado:
                    card_sucesso("An√°lise realizada com sucesso!")
                    st.subheader("‚úÖ Resultado da An√°lise")
                    st.markdown(resultado)

                    # Salvar no hist√≥rico
                    st.session_state.historico_alimentos.insert(0, {
                        "titulo": titulo,
                        "conteudo": resultado
                    })
                    st.session_state.historico_alimentos = st.session_state.historico_alimentos[:5]
                else:
                    card_falha("Falha ao realizar a an√°lise. Tente novamente.")

            except Exception as e:
                card_falha("Falha ao realizar a an√°lise. Verifique a imagem e tente novamente.")
                st.error(f"Ocorreu um erro: {e}")


# An√°lise por texto
elif opcao == "‚úçÔ∏è Digitar nome do alimento":
    nome_alimento = st.text_input("‚úçÔ∏è Digite o nome do alimento")

    if nome_alimento:
        if st.button("üîç Analisar"):
            with st.spinner("Analisando com muito carinho..."):
                try:
                    prompt = f"""
Voc√™ √© uma nutricionista especializada em sa√∫de da gestante. Responda diretamente sobre o alimento **{nome_alimento}**, sem introdu√ß√µes, sem sauda√ß√µes e sem repeti√ß√µes.

Informe:

1. Se o alimento √© seguro para gestantes (Sim, N√£o ou Depende).
2. Informe as calorias por 100g ou 100ml.
3. Diga se possui algum benef√≠cio na gesta√ß√£o.
4. Finalize sempre lembrando que a gestante deve consultar seu nutricionista ou m√©dico antes de consumir.

Caso n√£o consiga identificar o alimento, diga isso de forma acolhedora.
"""

                    response = model.generate_content(prompt)
                    resultado = response.text.strip()

                    if resultado:
                        card_sucesso("An√°lise realizada com sucesso!")
                        st.subheader("Resultado da An√°lise")
                        st.markdown(resultado)

                        st.session_state.historico_alimentos.insert(0, {
                            "titulo": nome_alimento,
                            "conteudo": resultado
                        })
                        st.session_state.historico_alimentos = st.session_state.historico_alimentos[:5]
                    else:
                        card_falha("Falha ao realizar a an√°lise. Tente novamente.")

                except Exception as e:
                    card_falha("Falha ao realizar a an√°lise. Verifique o nome e tente novamente.")
                    st.error(f"Ocorreu um erro: {e}")


# üîç Hist√≥rico de an√°lises
st.subheader("üîç Hist√≥rico de An√°lises Anteriores")

if st.session_state.historico_alimentos:
    for item in st.session_state.historico_alimentos:
        with st.expander(f"üóÇÔ∏è {item['titulo']}"):
            st.markdown(item['conteudo'])
else:
    st.info("Nenhuma an√°lise realizada ainda.")
